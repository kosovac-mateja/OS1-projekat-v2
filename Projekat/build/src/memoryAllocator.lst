GAS LISTING /tmp/cchBcBTk.s 			page 1


   1              		.file	"memoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator8mem_initEv
   9              	_ZN15MemoryAllocator8mem_initEv:
  10              	.LFB1:
  11              		.file 1 "src/memoryAllocator.cpp"
   1:src/memoryAllocator.cpp **** #include "../h/memoryAllocator.h"
   2:src/memoryAllocator.cpp **** 
   3:src/memoryAllocator.cpp **** FreeSegment* MemoryAllocator::freeSegmentHead = nullptr;
   4:src/memoryAllocator.cpp **** UsedSegment* MemoryAllocator::usedSegmentHead = nullptr;
   5:src/memoryAllocator.cpp **** bool MemoryAllocator::initialized = false;
   6:src/memoryAllocator.cpp **** 
   7:src/memoryAllocator.cpp **** void *MemoryAllocator::mem_alloc(size_t size) {
   8:src/memoryAllocator.cpp ****     if(size <= 0) return nullptr;
   9:src/memoryAllocator.cpp **** 
  10:src/memoryAllocator.cpp ****     size = size * MEM_BLOCK_SIZE;
  11:src/memoryAllocator.cpp **** 
  12:src/memoryAllocator.cpp ****     //inicijalizuj ako vec nije
  13:src/memoryAllocator.cpp ****     if(!initialized) {
  14:src/memoryAllocator.cpp ****         mem_init();
  15:src/memoryAllocator.cpp ****         initialized = true;
  16:src/memoryAllocator.cpp ****     }
  17:src/memoryAllocator.cpp **** 
  18:src/memoryAllocator.cpp ****     //iteriranje do prvog slobodnog bloka koji odgovara (first fit)
  19:src/memoryAllocator.cpp ****     FreeSegment *curr = freeSegmentHead;
  20:src/memoryAllocator.cpp ****     for(; curr && curr->size < size; curr = curr->next);
  21:src/memoryAllocator.cpp ****     if(!curr) return nullptr;
  22:src/memoryAllocator.cpp **** 
  23:src/memoryAllocator.cpp ****     size_t remainingSize = curr->size - size;
  24:src/memoryAllocator.cpp ****     curr->size = size;
  25:src/memoryAllocator.cpp ****     if(remainingSize < 2 * MEM_BLOCK_SIZE) //ako je preostali prostor manji od jednog bloka(drugi j
  26:src/memoryAllocator.cpp ****         freeSegmentHead = nullptr;
  27:src/memoryAllocator.cpp ****     else {
  28:src/memoryAllocator.cpp ****         //pravljenje novog segmenta
  29:src/memoryAllocator.cpp ****         size_t offset = MEM_BLOCK_SIZE + size;
  30:src/memoryAllocator.cpp ****         FreeSegment* newSegm = (FreeSegment*)((char*)curr + offset);
  31:src/memoryAllocator.cpp **** 
  32:src/memoryAllocator.cpp ****         //uvezivanje newSegm u listu slobodnih segmenata
  33:src/memoryAllocator.cpp ****         if (curr->prev) {
  34:src/memoryAllocator.cpp ****             curr->prev->next = newSegm;
  35:src/memoryAllocator.cpp ****             newSegm->prev = curr->prev;
  36:src/memoryAllocator.cpp ****         }
  37:src/memoryAllocator.cpp ****         else {
  38:src/memoryAllocator.cpp ****             freeSegmentHead = newSegm;
  39:src/memoryAllocator.cpp ****             freeSegmentHead->prev = nullptr;
  40:src/memoryAllocator.cpp ****         }
  41:src/memoryAllocator.cpp ****         if(curr->next)
  42:src/memoryAllocator.cpp ****             curr->next->prev = newSegm;
  43:src/memoryAllocator.cpp ****         newSegm->next = curr->next;
  44:src/memoryAllocator.cpp **** 
  45:src/memoryAllocator.cpp ****         newSegm->size = remainingSize - MEM_BLOCK_SIZE; //zbog njegovog zaglavlja
  46:src/memoryAllocator.cpp ****     }
  47:src/memoryAllocator.cpp **** 
GAS LISTING /tmp/cchBcBTk.s 			page 2


  48:src/memoryAllocator.cpp ****     curr->next = nullptr; //potpuno se odvezuje cvor
  49:src/memoryAllocator.cpp **** 
  50:src/memoryAllocator.cpp ****     //zaglavlje zauzetog segmenta nalazi se odmah posle slobodnog
  51:src/memoryAllocator.cpp ****     UsedSegment* used = (UsedSegment*)((char*)curr + sizeof(FreeSegment));
  52:src/memoryAllocator.cpp ****     used->size = size;
  53:src/memoryAllocator.cpp **** 
  54:src/memoryAllocator.cpp ****     if(!usedSegmentHead) {
  55:src/memoryAllocator.cpp ****         usedSegmentHead = used;
  56:src/memoryAllocator.cpp ****         usedSegmentHead->next = nullptr;
  57:src/memoryAllocator.cpp ****     }
  58:src/memoryAllocator.cpp ****     else {
  59:src/memoryAllocator.cpp ****         used->next = usedSegmentHead;
  60:src/memoryAllocator.cpp ****         usedSegmentHead = used;
  61:src/memoryAllocator.cpp ****     }
  62:src/memoryAllocator.cpp **** 
  63:src/memoryAllocator.cpp ****     return (char*)curr + MEM_BLOCK_SIZE; //vraca se adresa nakon zaglavlja
  64:src/memoryAllocator.cpp **** }
  65:src/memoryAllocator.cpp **** 
  66:src/memoryAllocator.cpp **** 
  67:src/memoryAllocator.cpp **** 
  68:src/memoryAllocator.cpp **** void MemoryAllocator::mem_init() {
  12              		.loc 1 68 34
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  69:src/memoryAllocator.cpp ****     freeSegmentHead = (FreeSegment*)HEAP_START_ADDR;
  20              		.loc 1 69 5
  21              		.loc 1 69 21 is_stmt 0
  22 000c 97070000 		la	a5,HEAP_START_ADDR
  22      83B70700 
  23 0014 83B60700 		ld	a3,0(a5)
  24 0018 17070000 		lla	a4,.LANCHOR0
  24      13070700 
  25 0020 2330D700 		sd	a3,0(a4)
  70:src/memoryAllocator.cpp ****     freeSegmentHead->size = (((size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR) / MEM_BLOCK_SIZE - 1
  26              		.loc 1 70 5 is_stmt 1
  27              		.loc 1 70 53 is_stmt 0
  28 0024 97070000 		la	a5,HEAP_END_ADDR
  28      83B70700 
  29 002c 83B70700 		ld	a5,0(a5)
  30 0030 B387D740 		sub	a5,a5,a3
  31              		.loc 1 70 80
  32 0034 93D76700 		srli	a5,a5,6
  33              		.loc 1 70 97
  34 0038 9387F7FF 		addi	a5,a5,-1
  35              		.loc 1 70 102
  36 003c 93976700 		slli	a5,a5,6
  37              		.loc 1 70 27
  38 0040 23B0F600 		sd	a5,0(a3)
  71:src/memoryAllocator.cpp ****     freeSegmentHead->next = nullptr;
  39              		.loc 1 71 5 is_stmt 1
  40              		.loc 1 71 22 is_stmt 0
  41 0044 83370700 		ld	a5,0(a4)
GAS LISTING /tmp/cchBcBTk.s 			page 3


  42              		.loc 1 71 27
  43 0048 23B40700 		sd	zero,8(a5)
  72:src/memoryAllocator.cpp ****     freeSegmentHead->prev = nullptr;
  44              		.loc 1 72 5 is_stmt 1
  45              		.loc 1 72 27 is_stmt 0
  46 004c 23B80700 		sd	zero,16(a5)
  73:src/memoryAllocator.cpp **** 
  74:src/memoryAllocator.cpp ****     usedSegmentHead = nullptr;
  47              		.loc 1 74 5 is_stmt 1
  48              		.loc 1 74 21 is_stmt 0
  49 0050 23340700 		sd	zero,8(a4)
  75:src/memoryAllocator.cpp **** }
  50              		.loc 1 75 1
  51 0054 03348100 		ld	s0,8(sp)
  52              		.cfi_restore 8
  53              		.cfi_def_cfa 2, 16
  54 0058 13010101 		addi	sp,sp,16
  55              		.cfi_def_cfa_offset 0
  56 005c 67800000 		jr	ra
  57              		.cfi_endproc
  58              	.LFE1:
  60              		.align	2
  61              		.globl	_ZN15MemoryAllocator9mem_allocEm
  63              	_ZN15MemoryAllocator9mem_allocEm:
  64              	.LFB0:
   7:src/memoryAllocator.cpp ****     if(size <= 0) return nullptr;
  65              		.loc 1 7 47 is_stmt 1
  66              		.cfi_startproc
  67              	.LVL0:
   8:src/memoryAllocator.cpp **** 
  68              		.loc 1 8 5
  69 0060 630A0510 		beqz	a0,.L15
   7:src/memoryAllocator.cpp ****     if(size <= 0) return nullptr;
  70              		.loc 1 7 47 is_stmt 0
  71 0064 130101FE 		addi	sp,sp,-32
  72              		.cfi_def_cfa_offset 32
  73 0068 233C1100 		sd	ra,24(sp)
  74 006c 23388100 		sd	s0,16(sp)
  75 0070 23349100 		sd	s1,8(sp)
  76              		.cfi_offset 1, -8
  77              		.cfi_offset 8, -16
  78              		.cfi_offset 9, -24
  79 0074 13040102 		addi	s0,sp,32
  80              		.cfi_def_cfa 8, 0
  10:src/memoryAllocator.cpp **** 
  81              		.loc 1 10 5 is_stmt 1
  10:src/memoryAllocator.cpp **** 
  82              		.loc 1 10 10 is_stmt 0
  83 0078 93146500 		slli	s1,a0,6
  84              	.LVL1:
  13:src/memoryAllocator.cpp ****         mem_init();
  85              		.loc 1 13 5 is_stmt 1
  13:src/memoryAllocator.cpp ****         mem_init();
  86              		.loc 1 13 8 is_stmt 0
  87 007c 97070000 		lbu	a5,.LANCHOR0+16
  87      83C70700 
  13:src/memoryAllocator.cpp ****         mem_init();
GAS LISTING /tmp/cchBcBTk.s 			page 4


  88              		.loc 1 13 5
  89 0084 63800702 		beqz	a5,.L20
  90              	.L5:
  19:src/memoryAllocator.cpp ****     for(; curr && curr->size < size; curr = curr->next);
  91              		.loc 1 19 5 is_stmt 1
  19:src/memoryAllocator.cpp ****     for(; curr && curr->size < size; curr = curr->next);
  92              		.loc 1 19 18 is_stmt 0
  93 0088 17050000 		ld	a0,.LANCHOR0
  93      03350500 
  94              	.LVL2:
  95              	.L7:
  20:src/memoryAllocator.cpp ****     if(!curr) return nullptr;
  96              		.loc 1 20 5 is_stmt 1 discriminator 3
  20:src/memoryAllocator.cpp ****     if(!curr) return nullptr;
  97              		.loc 1 20 16 discriminator 3
  98 0090 63060502 		beqz	a0,.L6
  20:src/memoryAllocator.cpp ****     if(!curr) return nullptr;
  99              		.loc 1 20 25 is_stmt 0 discriminator 1
 100 0094 83370500 		ld	a5,0(a0)
  20:src/memoryAllocator.cpp ****     if(!curr) return nullptr;
 101              		.loc 1 20 16 discriminator 1
 102 0098 63F29702 		bgeu	a5,s1,.L6
  20:src/memoryAllocator.cpp ****     if(!curr) return nullptr;
 103              		.loc 1 20 5 is_stmt 1 discriminator 2
  20:src/memoryAllocator.cpp ****     if(!curr) return nullptr;
 104              		.loc 1 20 43 is_stmt 0 discriminator 2
 105 009c 03358500 		ld	a0,8(a0)
 106              	.LVL3:
  20:src/memoryAllocator.cpp ****     if(!curr) return nullptr;
 107              		.loc 1 20 5 discriminator 2
 108 00a0 6FF01FFF 		j	.L7
 109              	.LVL4:
 110              	.L20:
  14:src/memoryAllocator.cpp ****         initialized = true;
 111              		.loc 1 14 9 is_stmt 1
  14:src/memoryAllocator.cpp ****         initialized = true;
 112              		.loc 1 14 17 is_stmt 0
 113 00a4 97000000 		call	_ZN15MemoryAllocator8mem_initEv
 113      E7800000 
 114              	.LVL5:
  15:src/memoryAllocator.cpp ****     }
 115              		.loc 1 15 9 is_stmt 1
  15:src/memoryAllocator.cpp ****     }
 116              		.loc 1 15 21 is_stmt 0
 117 00ac 93071000 		li	a5,1
 118 00b0 17070000 		sb	a5,.LANCHOR0+16,a4
 118      2300F700 
 119 00b8 6FF01FFD 		j	.L5
 120              	.LVL6:
 121              	.L6:
  21:src/memoryAllocator.cpp **** 
 122              		.loc 1 21 5 is_stmt 1
 123 00bc 63040504 		beqz	a0,.L3
  23:src/memoryAllocator.cpp ****     curr->size = size;
 124              		.loc 1 23 5
  23:src/memoryAllocator.cpp ****     curr->size = size;
 125              		.loc 1 23 34 is_stmt 0
GAS LISTING /tmp/cchBcBTk.s 			page 5


 126 00c0 83370500 		ld	a5,0(a0)
  23:src/memoryAllocator.cpp ****     curr->size = size;
 127              		.loc 1 23 12
 128 00c4 B3879740 		sub	a5,a5,s1
 129              	.LVL7:
  24:src/memoryAllocator.cpp ****     if(remainingSize < 2 * MEM_BLOCK_SIZE) //ako je preostali prostor manji od jednog bloka(drugi j
 130              		.loc 1 24 5 is_stmt 1
  24:src/memoryAllocator.cpp ****     if(remainingSize < 2 * MEM_BLOCK_SIZE) //ako je preostali prostor manji od jednog bloka(drugi j
 131              		.loc 1 24 16 is_stmt 0
 132 00c8 23309500 		sd	s1,0(a0)
  25:src/memoryAllocator.cpp ****         freeSegmentHead = nullptr;
 133              		.loc 1 25 5 is_stmt 1
 134              	.LBB2:
 135 00cc 1307F007 		li	a4,127
 136 00d0 6364F704 		bgtu	a5,a4,.L8
  26:src/memoryAllocator.cpp ****     else {
 137              		.loc 1 26 9
  26:src/memoryAllocator.cpp ****     else {
 138              		.loc 1 26 25 is_stmt 0
 139 00d4 97070000 		sd	zero,.LANCHOR0,a5
 139      23B00700 
 140              	.LVL8:
 141              	.L9:
 142              	.LBE2:
  48:src/memoryAllocator.cpp **** 
 143              		.loc 1 48 5 is_stmt 1
  48:src/memoryAllocator.cpp **** 
 144              		.loc 1 48 16 is_stmt 0
 145 00dc 23340500 		sd	zero,8(a0)
  51:src/memoryAllocator.cpp ****     used->size = size;
 146              		.loc 1 51 5 is_stmt 1
  51:src/memoryAllocator.cpp ****     used->size = size;
 147              		.loc 1 51 18 is_stmt 0
 148 00e0 13078501 		addi	a4,a0,24
 149              	.LVL9:
  52:src/memoryAllocator.cpp **** 
 150              		.loc 1 52 5 is_stmt 1
  52:src/memoryAllocator.cpp **** 
 151              		.loc 1 52 16 is_stmt 0
 152 00e4 233C9500 		sd	s1,24(a0)
  54:src/memoryAllocator.cpp ****         usedSegmentHead = used;
 153              		.loc 1 54 5 is_stmt 1
  54:src/memoryAllocator.cpp ****         usedSegmentHead = used;
 154              		.loc 1 54 8 is_stmt 0
 155 00e8 97070000 		ld	a5,.LANCHOR0+8
 155      83B70700 
  54:src/memoryAllocator.cpp ****         usedSegmentHead = used;
 156              		.loc 1 54 5
 157 00f0 638A0706 		beqz	a5,.L21
  59:src/memoryAllocator.cpp ****         usedSegmentHead = used;
 158              		.loc 1 59 9 is_stmt 1
  59:src/memoryAllocator.cpp ****         usedSegmentHead = used;
 159              		.loc 1 59 20 is_stmt 0
 160 00f4 2330F502 		sd	a5,32(a0)
  60:src/memoryAllocator.cpp ****     }
 161              		.loc 1 60 9 is_stmt 1
  60:src/memoryAllocator.cpp ****     }
GAS LISTING /tmp/cchBcBTk.s 			page 6


 162              		.loc 1 60 25 is_stmt 0
 163 00f8 97070000 		sd	a4,.LANCHOR0+8,a5
 163      23B0E700 
 164              	.L14:
  63:src/memoryAllocator.cpp **** }
 165              		.loc 1 63 5 is_stmt 1
  63:src/memoryAllocator.cpp **** }
 166              		.loc 1 63 26 is_stmt 0
 167 0100 13050504 		addi	a0,a0,64
 168              	.LVL10:
 169              	.L3:
  64:src/memoryAllocator.cpp **** 
 170              		.loc 1 64 1
 171 0104 83308101 		ld	ra,24(sp)
 172              		.cfi_remember_state
 173              		.cfi_restore 1
 174 0108 03340101 		ld	s0,16(sp)
 175              		.cfi_restore 8
 176              		.cfi_def_cfa 2, 32
 177 010c 83348100 		ld	s1,8(sp)
 178              		.cfi_restore 9
 179              	.LVL11:
 180 0110 13010102 		addi	sp,sp,32
 181              		.cfi_def_cfa_offset 0
 182 0114 67800000 		jr	ra
 183              	.LVL12:
 184              	.L8:
 185              		.cfi_restore_state
 186              	.LBB4:
 187              	.LBB3:
  29:src/memoryAllocator.cpp ****         FreeSegment* newSegm = (FreeSegment*)((char*)curr + offset);
 188              		.loc 1 29 9 is_stmt 1
  29:src/memoryAllocator.cpp ****         FreeSegment* newSegm = (FreeSegment*)((char*)curr + offset);
 189              		.loc 1 29 16 is_stmt 0
 190 0118 13870404 		addi	a4,s1,64
 191              	.LVL13:
  30:src/memoryAllocator.cpp **** 
 192              		.loc 1 30 9 is_stmt 1
  30:src/memoryAllocator.cpp **** 
 193              		.loc 1 30 22 is_stmt 0
 194 011c 3307E500 		add	a4,a0,a4
 195              	.LVL14:
  33:src/memoryAllocator.cpp ****             curr->prev->next = newSegm;
 196              		.loc 1 33 9 is_stmt 1
  33:src/memoryAllocator.cpp ****             curr->prev->next = newSegm;
 197              		.loc 1 33 19 is_stmt 0
 198 0120 83360501 		ld	a3,16(a0)
  33:src/memoryAllocator.cpp ****             curr->prev->next = newSegm;
 199              		.loc 1 33 9
 200 0124 63880602 		beqz	a3,.L10
  34:src/memoryAllocator.cpp ****             newSegm->prev = curr->prev;
 201              		.loc 1 34 13 is_stmt 1
  34:src/memoryAllocator.cpp ****             newSegm->prev = curr->prev;
 202              		.loc 1 34 30 is_stmt 0
 203 0128 23B4E600 		sd	a4,8(a3)
  35:src/memoryAllocator.cpp ****         }
 204              		.loc 1 35 13 is_stmt 1
GAS LISTING /tmp/cchBcBTk.s 			page 7


  35:src/memoryAllocator.cpp ****         }
 205              		.loc 1 35 35 is_stmt 0
 206 012c 83360501 		ld	a3,16(a0)
  35:src/memoryAllocator.cpp ****         }
 207              		.loc 1 35 27
 208 0130 2338D700 		sd	a3,16(a4)
 209              	.L11:
  41:src/memoryAllocator.cpp ****             curr->next->prev = newSegm;
 210              		.loc 1 41 9 is_stmt 1
  41:src/memoryAllocator.cpp ****             curr->next->prev = newSegm;
 211              		.loc 1 41 18 is_stmt 0
 212 0134 83368500 		ld	a3,8(a0)
  41:src/memoryAllocator.cpp ****             curr->next->prev = newSegm;
 213              		.loc 1 41 9
 214 0138 63840600 		beqz	a3,.L12
  42:src/memoryAllocator.cpp ****         newSegm->next = curr->next;
 215              		.loc 1 42 13 is_stmt 1
  42:src/memoryAllocator.cpp ****         newSegm->next = curr->next;
 216              		.loc 1 42 30 is_stmt 0
 217 013c 23B8E600 		sd	a4,16(a3)
 218              	.L12:
  43:src/memoryAllocator.cpp **** 
 219              		.loc 1 43 9 is_stmt 1
  43:src/memoryAllocator.cpp **** 
 220              		.loc 1 43 31 is_stmt 0
 221 0140 83368500 		ld	a3,8(a0)
  43:src/memoryAllocator.cpp **** 
 222              		.loc 1 43 23
 223 0144 2334D700 		sd	a3,8(a4)
  45:src/memoryAllocator.cpp ****     }
 224              		.loc 1 45 9 is_stmt 1
  45:src/memoryAllocator.cpp ****     }
 225              		.loc 1 45 39 is_stmt 0
 226 0148 938707FC 		addi	a5,a5,-64
 227              	.LVL15:
  45:src/memoryAllocator.cpp ****     }
 228              		.loc 1 45 23
 229 014c 2330F700 		sd	a5,0(a4)
 230 0150 6FF0DFF8 		j	.L9
 231              	.LVL16:
 232              	.L10:
  38:src/memoryAllocator.cpp ****             freeSegmentHead->prev = nullptr;
 233              		.loc 1 38 13 is_stmt 1
  38:src/memoryAllocator.cpp ****             freeSegmentHead->prev = nullptr;
 234              		.loc 1 38 29 is_stmt 0
 235 0154 97060000 		sd	a4,.LANCHOR0,a3
 235      23B0E600 
  39:src/memoryAllocator.cpp ****         }
 236              		.loc 1 39 13 is_stmt 1
  39:src/memoryAllocator.cpp ****         }
 237              		.loc 1 39 35 is_stmt 0
 238 015c 23380700 		sd	zero,16(a4)
 239 0160 6FF05FFD 		j	.L11
 240              	.LVL17:
 241              	.L21:
 242              	.LBE3:
 243              	.LBE4:
GAS LISTING /tmp/cchBcBTk.s 			page 8


  55:src/memoryAllocator.cpp ****         usedSegmentHead->next = nullptr;
 244              		.loc 1 55 9 is_stmt 1
  55:src/memoryAllocator.cpp ****         usedSegmentHead->next = nullptr;
 245              		.loc 1 55 25 is_stmt 0
 246 0164 97070000 		sd	a4,.LANCHOR0+8,a5
 246      23B0E700 
  56:src/memoryAllocator.cpp ****     }
 247              		.loc 1 56 9 is_stmt 1
  56:src/memoryAllocator.cpp ****     }
 248              		.loc 1 56 31 is_stmt 0
 249 016c 23340700 		sd	zero,8(a4)
 250 0170 6FF01FF9 		j	.L14
 251              	.LVL18:
 252              	.L15:
 253              		.cfi_def_cfa_register 2
 254              		.cfi_restore 1
 255              		.cfi_restore 8
 256              		.cfi_restore 9
   8:src/memoryAllocator.cpp **** 
 257              		.loc 1 8 26
 258 0174 13050000 		li	a0,0
 259              	.LVL19:
  64:src/memoryAllocator.cpp **** 
 260              		.loc 1 64 1
 261 0178 67800000 		ret
 262              		.cfi_endproc
 263              	.LFE0:
 265              		.align	2
 266              		.globl	_ZN15MemoryAllocator9tryToJoinEP11FreeSegment
 268              	_ZN15MemoryAllocator9tryToJoinEP11FreeSegment:
 269              	.LFB3:
  76:src/memoryAllocator.cpp **** 
  77:src/memoryAllocator.cpp **** int MemoryAllocator::mem_free(void *addr) {
  78:src/memoryAllocator.cpp ****     if(!addr) return -1;
  79:src/memoryAllocator.cpp **** 
  80:src/memoryAllocator.cpp ****     //pokusava da se u listi zauzetih pronadje trazena adresa
  81:src/memoryAllocator.cpp ****     UsedSegment* curr = usedSegmentHead, *prev = nullptr;
  82:src/memoryAllocator.cpp ****     for(; (curr != nullptr) & ((char*)curr - sizeof(FreeSegment) + MEM_BLOCK_SIZE != (char*)addr);
  83:src/memoryAllocator.cpp ****     prev = curr, curr = curr->next);
  84:src/memoryAllocator.cpp ****     if(!curr) return -1;
  85:src/memoryAllocator.cpp **** 
  86:src/memoryAllocator.cpp ****     //izbacivanje iz liste zauzetih ako je pronadjen
  87:src/memoryAllocator.cpp ****     if(prev) {
  88:src/memoryAllocator.cpp ****         prev->next = curr->next;
  89:src/memoryAllocator.cpp ****     }
  90:src/memoryAllocator.cpp ****     else usedSegmentHead = curr->next;
  91:src/memoryAllocator.cpp **** 
  92:src/memoryAllocator.cpp ****     //trazi se prethodnik od segmenta koji cemo da ubacimo
  93:src/memoryAllocator.cpp ****     FreeSegment* fcurr = nullptr;
  94:src/memoryAllocator.cpp ****     if(freeSegmentHead && (char*)freeSegmentHead < (char*)addr) //ako uslov nije ispunjen segment p
  95:src/memoryAllocator.cpp ****         for(fcurr = freeSegmentHead; fcurr->next && (char*)addr > (char*)(fcurr->next); fcurr = fcu
  96:src/memoryAllocator.cpp **** 
  97:src/memoryAllocator.cpp ****     FreeSegment* newSeg = (FreeSegment*)((char*)addr - MEM_BLOCK_SIZE);
  98:src/memoryAllocator.cpp ****     newSeg->size = curr->size;
  99:src/memoryAllocator.cpp ****     //uvezivanje u listu slobodnih
 100:src/memoryAllocator.cpp ****     newSeg->prev = fcurr;
 101:src/memoryAllocator.cpp ****     if (fcurr) newSeg->next = fcurr->next;
GAS LISTING /tmp/cchBcBTk.s 			page 9


 102:src/memoryAllocator.cpp ****     else newSeg->next = freeSegmentHead;
 103:src/memoryAllocator.cpp ****     if (newSeg->next) newSeg->next->prev = newSeg;
 104:src/memoryAllocator.cpp ****     if (fcurr) fcurr->next = newSeg;
 105:src/memoryAllocator.cpp ****     else freeSegmentHead = newSeg;
 106:src/memoryAllocator.cpp **** 
 107:src/memoryAllocator.cpp ****     tryToJoin(newSeg);
 108:src/memoryAllocator.cpp ****     tryToJoin(fcurr);
 109:src/memoryAllocator.cpp **** 
 110:src/memoryAllocator.cpp ****     return 0;
 111:src/memoryAllocator.cpp **** }
 112:src/memoryAllocator.cpp **** 
 113:src/memoryAllocator.cpp **** void MemoryAllocator::tryToJoin(FreeSegment *curr) {
 270              		.loc 1 113 52 is_stmt 1
 271              		.cfi_startproc
 272              	.LVL20:
 273 017c 130101FF 		addi	sp,sp,-16
 274              		.cfi_def_cfa_offset 16
 275 0180 23348100 		sd	s0,8(sp)
 276              		.cfi_offset 8, -8
 277 0184 13040101 		addi	s0,sp,16
 278              		.cfi_def_cfa 8, 0
 114:src/memoryAllocator.cpp ****     if (!curr) return;
 279              		.loc 1 114 5
 280 0188 630E0500 		beqz	a0,.L22
 115:src/memoryAllocator.cpp ****     //da li je kraj jednog bloka jednak pocetku drugog
 116:src/memoryAllocator.cpp ****     if (curr->next && (char*)curr + curr->size == (char*)(curr->next) - MEM_BLOCK_SIZE) {
 281              		.loc 1 116 5
 282              		.loc 1 116 15 is_stmt 0
 283 018c 83378500 		ld	a5,8(a0)
 284              		.loc 1 116 5
 285 0190 638A0700 		beqz	a5,.L22
 286              		.loc 1 116 43 discriminator 1
 287 0194 03370500 		ld	a4,0(a0)
 288              		.loc 1 116 35 discriminator 1
 289 0198 3306E500 		add	a2,a0,a4
 290              		.loc 1 116 71 discriminator 1
 291 019c 938607FC 		addi	a3,a5,-64
 292              		.loc 1 116 20 discriminator 1
 293 01a0 6308D600 		beq	a2,a3,.L25
 294              	.L22:
 117:src/memoryAllocator.cpp ****         curr->size += curr->next->size + MEM_BLOCK_SIZE;
 118:src/memoryAllocator.cpp ****         curr->next = curr->next->next;
 119:src/memoryAllocator.cpp ****         if (curr->next) curr->next->prev = curr;
 120:src/memoryAllocator.cpp ****     }
 121:src/memoryAllocator.cpp **** }
 295              		.loc 1 121 1
 296 01a4 03348100 		ld	s0,8(sp)
 297              		.cfi_remember_state
 298              		.cfi_restore 8
 299              		.cfi_def_cfa 2, 16
 300 01a8 13010101 		addi	sp,sp,16
 301              		.cfi_def_cfa_offset 0
 302 01ac 67800000 		jr	ra
 303              	.L25:
 304              		.cfi_restore_state
 117:src/memoryAllocator.cpp ****         curr->size += curr->next->size + MEM_BLOCK_SIZE;
 305              		.loc 1 117 9 is_stmt 1
GAS LISTING /tmp/cchBcBTk.s 			page 10


 117:src/memoryAllocator.cpp ****         curr->size += curr->next->size + MEM_BLOCK_SIZE;
 306              		.loc 1 117 35 is_stmt 0
 307 01b0 83B60700 		ld	a3,0(a5)
 117:src/memoryAllocator.cpp ****         curr->size += curr->next->size + MEM_BLOCK_SIZE;
 308              		.loc 1 117 20
 309 01b4 3307D700 		add	a4,a4,a3
 310 01b8 13070704 		addi	a4,a4,64
 311 01bc 2330E500 		sd	a4,0(a0)
 118:src/memoryAllocator.cpp ****         if (curr->next) curr->next->prev = curr;
 312              		.loc 1 118 9 is_stmt 1
 118:src/memoryAllocator.cpp ****         if (curr->next) curr->next->prev = curr;
 313              		.loc 1 118 34 is_stmt 0
 314 01c0 83B78700 		ld	a5,8(a5)
 118:src/memoryAllocator.cpp ****         if (curr->next) curr->next->prev = curr;
 315              		.loc 1 118 20
 316 01c4 2334F500 		sd	a5,8(a0)
 119:src/memoryAllocator.cpp ****     }
 317              		.loc 1 119 9 is_stmt 1
 318 01c8 E38E07FC 		beqz	a5,.L22
 119:src/memoryAllocator.cpp ****     }
 319              		.loc 1 119 25 discriminator 1
 119:src/memoryAllocator.cpp ****     }
 320              		.loc 1 119 42 is_stmt 0 discriminator 1
 321 01cc 23B8A700 		sd	a0,16(a5)
 322 01d0 6FF05FFD 		j	.L22
 323              		.cfi_endproc
 324              	.LFE3:
 326              		.align	2
 327              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 329              	_ZN15MemoryAllocator8mem_freeEPv:
 330              	.LFB2:
  77:src/memoryAllocator.cpp ****     if(!addr) return -1;
 331              		.loc 1 77 43 is_stmt 1
 332              		.cfi_startproc
 333              	.LVL21:
  78:src/memoryAllocator.cpp **** 
 334              		.loc 1 78 5
 335 01d4 630C0510 		beqz	a0,.L39
 336 01d8 13060500 		mv	a2,a0
  81:src/memoryAllocator.cpp ****     for(; (curr != nullptr) & ((char*)curr - sizeof(FreeSegment) + MEM_BLOCK_SIZE != (char*)addr);
 337              		.loc 1 81 5
  81:src/memoryAllocator.cpp ****     for(; (curr != nullptr) & ((char*)curr - sizeof(FreeSegment) + MEM_BLOCK_SIZE != (char*)addr);
 338              		.loc 1 81 18 is_stmt 0
 339 01dc 97060000 		ld	a3,.LANCHOR0+8
 339      83B60600 
 340              	.LVL22:
  81:src/memoryAllocator.cpp ****     for(; (curr != nullptr) & ((char*)curr - sizeof(FreeSegment) + MEM_BLOCK_SIZE != (char*)addr);
 341              		.loc 1 81 43
 342 01e4 93050000 		li	a1,0
 343              	.LVL23:
 344              	.L29:
  82:src/memoryAllocator.cpp ****     prev = curr, curr = curr->next);
 345              		.loc 1 82 5 is_stmt 1
  82:src/memoryAllocator.cpp ****     prev = curr, curr = curr->next);
 346              		.loc 1 82 97
  82:src/memoryAllocator.cpp ****     prev = curr, curr = curr->next);
 347              		.loc 1 82 66 is_stmt 0
GAS LISTING /tmp/cchBcBTk.s 			page 11


 348 01e8 13878602 		addi	a4,a3,40
  82:src/memoryAllocator.cpp ****     prev = curr, curr = curr->next);
 349              		.loc 1 82 29
 350 01ec B337D000 		snez	a5,a3
 351 01f0 3307C740 		sub	a4,a4,a2
 352 01f4 3337E000 		snez	a4,a4
 353 01f8 B3F7E700 		and	a5,a5,a4
 354 01fc 93F7F70F 		andi	a5,a5,0xff
  82:src/memoryAllocator.cpp ****     prev = curr, curr = curr->next);
 355              		.loc 1 82 97
 356 0200 63880700 		beqz	a5,.L28
  82:src/memoryAllocator.cpp ****     prev = curr, curr = curr->next);
 357              		.loc 1 82 5 is_stmt 1 discriminator 1
 358              	.LVL24:
  83:src/memoryAllocator.cpp ****     if(!curr) return -1;
 359              		.loc 1 83 10 is_stmt 0 discriminator 1
 360 0204 93850600 		mv	a1,a3
  83:src/memoryAllocator.cpp ****     if(!curr) return -1;
 361              		.loc 1 83 23 discriminator 1
 362 0208 83B68600 		ld	a3,8(a3)
 363              	.LVL25:
  82:src/memoryAllocator.cpp ****     prev = curr, curr = curr->next);
 364              		.loc 1 82 5 discriminator 1
 365 020c 6FF0DFFD 		j	.L29
 366              	.L28:
  84:src/memoryAllocator.cpp **** 
 367              		.loc 1 84 5 is_stmt 1
 368 0210 6382060E 		beqz	a3,.L40
  77:src/memoryAllocator.cpp ****     if(!addr) return -1;
 369              		.loc 1 77 43 is_stmt 0
 370 0214 130101FE 		addi	sp,sp,-32
 371              		.cfi_def_cfa_offset 32
 372 0218 233C1100 		sd	ra,24(sp)
 373 021c 23388100 		sd	s0,16(sp)
 374 0220 23349100 		sd	s1,8(sp)
 375              		.cfi_offset 1, -8
 376              		.cfi_offset 8, -16
 377              		.cfi_offset 9, -24
 378 0224 13040102 		addi	s0,sp,32
 379              		.cfi_def_cfa 8, 0
  87:src/memoryAllocator.cpp ****         prev->next = curr->next;
 380              		.loc 1 87 5 is_stmt 1
 381 0228 63880502 		beqz	a1,.L30
  88:src/memoryAllocator.cpp ****     }
 382              		.loc 1 88 9
  88:src/memoryAllocator.cpp ****     }
 383              		.loc 1 88 28 is_stmt 0
 384 022c 83B78600 		ld	a5,8(a3)
  88:src/memoryAllocator.cpp ****     }
 385              		.loc 1 88 20
 386 0230 23B4F500 		sd	a5,8(a1)
 387              	.L31:
  93:src/memoryAllocator.cpp ****     if(freeSegmentHead && (char*)freeSegmentHead < (char*)addr) //ako uslov nije ispunjen segment p
 388              		.loc 1 93 5 is_stmt 1
 389              	.LVL26:
  94:src/memoryAllocator.cpp ****         for(fcurr = freeSegmentHead; fcurr->next && (char*)addr > (char*)(fcurr->next); fcurr = fcu
 390              		.loc 1 94 5
GAS LISTING /tmp/cchBcBTk.s 			page 12


  94:src/memoryAllocator.cpp ****         for(fcurr = freeSegmentHead; fcurr->next && (char*)addr > (char*)(fcurr->next); fcurr = fcu
 391              		.loc 1 94 59 is_stmt 0
 392 0234 97070000 		ld	a5,.LANCHOR0
 392      83B70700 
  94:src/memoryAllocator.cpp ****         for(fcurr = freeSegmentHead; fcurr->next && (char*)addr > (char*)(fcurr->next); fcurr = fcu
 393              		.loc 1 94 5
 394 023c 63860702 		beqz	a5,.L41
  94:src/memoryAllocator.cpp ****         for(fcurr = freeSegmentHead; fcurr->next && (char*)addr > (char*)(fcurr->next); fcurr = fcu
 395              		.loc 1 94 24 discriminator 1
 396 0240 63F8C702 		bgeu	a5,a2,.L42
 397              	.LVL27:
 398              	.L33:
  95:src/memoryAllocator.cpp **** 
 399              		.loc 1 95 50 is_stmt 1 discriminator 4
 400 0244 93840700 		mv	s1,a5
  95:src/memoryAllocator.cpp **** 
 401              		.loc 1 95 45 is_stmt 0 discriminator 4
 402 0248 83B78700 		ld	a5,8(a5)
 403              	.LVL28:
  95:src/memoryAllocator.cpp **** 
 404              		.loc 1 95 50 discriminator 4
 405 024c 63840702 		beqz	a5,.L32
  95:src/memoryAllocator.cpp **** 
 406              		.loc 1 95 50 discriminator 2
 407 0250 E3EAC7FE 		bltu	a5,a2,.L33
 408 0254 6F000002 		j	.L32
 409              	.LVL29:
 410              	.L30:
  90:src/memoryAllocator.cpp **** 
 411              		.loc 1 90 10 is_stmt 1
  90:src/memoryAllocator.cpp **** 
 412              		.loc 1 90 34 is_stmt 0
 413 0258 83B78600 		ld	a5,8(a3)
  90:src/memoryAllocator.cpp **** 
 414              		.loc 1 90 26
 415 025c 17070000 		sd	a5,.LANCHOR0+8,a4
 415      2330F700 
 416 0264 6FF01FFD 		j	.L31
 417              	.LVL30:
 418              	.L41:
  93:src/memoryAllocator.cpp ****     if(freeSegmentHead && (char*)freeSegmentHead < (char*)addr) //ako uslov nije ispunjen segment p
 419              		.loc 1 93 18
 420 0268 93840700 		mv	s1,a5
 421 026c 6F008000 		j	.L32
 422              	.L42:
 423 0270 93040000 		li	s1,0
 424              	.LVL31:
 425              	.L32:
  97:src/memoryAllocator.cpp ****     newSeg->size = curr->size;
 426              		.loc 1 97 5 is_stmt 1
  97:src/memoryAllocator.cpp ****     newSeg->size = curr->size;
 427              		.loc 1 97 18 is_stmt 0
 428 0274 130506FC 		addi	a0,a2,-64
 429              	.LVL32:
  98:src/memoryAllocator.cpp ****     //uvezivanje u listu slobodnih
 430              		.loc 1 98 5 is_stmt 1
  98:src/memoryAllocator.cpp ****     //uvezivanje u listu slobodnih
GAS LISTING /tmp/cchBcBTk.s 			page 13


 431              		.loc 1 98 26 is_stmt 0
 432 0278 83B70600 		ld	a5,0(a3)
  98:src/memoryAllocator.cpp ****     //uvezivanje u listu slobodnih
 433              		.loc 1 98 18
 434 027c 2330F6FC 		sd	a5,-64(a2)
 100:src/memoryAllocator.cpp ****     if (fcurr) newSeg->next = fcurr->next;
 435              		.loc 1 100 5 is_stmt 1
 100:src/memoryAllocator.cpp ****     if (fcurr) newSeg->next = fcurr->next;
 436              		.loc 1 100 18 is_stmt 0
 437 0280 233896FC 		sd	s1,-48(a2)
 101:src/memoryAllocator.cpp ****     else newSeg->next = freeSegmentHead;
 438              		.loc 1 101 5 is_stmt 1
 439 0284 63860404 		beqz	s1,.L34
 101:src/memoryAllocator.cpp ****     else newSeg->next = freeSegmentHead;
 440              		.loc 1 101 16 discriminator 1
 101:src/memoryAllocator.cpp ****     else newSeg->next = freeSegmentHead;
 441              		.loc 1 101 38 is_stmt 0 discriminator 1
 442 0288 83B78400 		ld	a5,8(s1)
 101:src/memoryAllocator.cpp ****     else newSeg->next = freeSegmentHead;
 443              		.loc 1 101 29 discriminator 1
 444 028c 2334F6FC 		sd	a5,-56(a2)
 445              	.L35:
 103:src/memoryAllocator.cpp ****     if (fcurr) fcurr->next = newSeg;
 446              		.loc 1 103 5 is_stmt 1
 103:src/memoryAllocator.cpp ****     if (fcurr) fcurr->next = newSeg;
 447              		.loc 1 103 17 is_stmt 0
 448 0290 833786FC 		ld	a5,-56(a2)
 103:src/memoryAllocator.cpp ****     if (fcurr) fcurr->next = newSeg;
 449              		.loc 1 103 5
 450 0294 63840700 		beqz	a5,.L36
 103:src/memoryAllocator.cpp ****     if (fcurr) fcurr->next = newSeg;
 451              		.loc 1 103 23 is_stmt 1 discriminator 1
 103:src/memoryAllocator.cpp ****     if (fcurr) fcurr->next = newSeg;
 452              		.loc 1 103 42 is_stmt 0 discriminator 1
 453 0298 23B8A700 		sd	a0,16(a5)
 454              	.L36:
 104:src/memoryAllocator.cpp ****     else freeSegmentHead = newSeg;
 455              		.loc 1 104 5 is_stmt 1
 456 029c 63820404 		beqz	s1,.L37
 104:src/memoryAllocator.cpp ****     else freeSegmentHead = newSeg;
 457              		.loc 1 104 16 discriminator 1
 104:src/memoryAllocator.cpp ****     else freeSegmentHead = newSeg;
 458              		.loc 1 104 28 is_stmt 0 discriminator 1
 459 02a0 23B4A400 		sd	a0,8(s1)
 460              	.L38:
 107:src/memoryAllocator.cpp ****     tryToJoin(fcurr);
 461              		.loc 1 107 5 is_stmt 1
 107:src/memoryAllocator.cpp ****     tryToJoin(fcurr);
 462              		.loc 1 107 14 is_stmt 0
 463 02a4 97000000 		call	_ZN15MemoryAllocator9tryToJoinEP11FreeSegment
 463      E7800000 
 464              	.LVL33:
 108:src/memoryAllocator.cpp **** 
 465              		.loc 1 108 5 is_stmt 1
 108:src/memoryAllocator.cpp **** 
 466              		.loc 1 108 14 is_stmt 0
 467 02ac 13850400 		mv	a0,s1
GAS LISTING /tmp/cchBcBTk.s 			page 14


 468 02b0 97000000 		call	_ZN15MemoryAllocator9tryToJoinEP11FreeSegment
 468      E7800000 
 469              	.LVL34:
 110:src/memoryAllocator.cpp **** }
 470              		.loc 1 110 5 is_stmt 1
 110:src/memoryAllocator.cpp **** }
 471              		.loc 1 110 12 is_stmt 0
 472 02b8 13050000 		li	a0,0
 111:src/memoryAllocator.cpp **** 
 473              		.loc 1 111 1
 474 02bc 83308101 		ld	ra,24(sp)
 475              		.cfi_remember_state
 476              		.cfi_restore 1
 477 02c0 03340101 		ld	s0,16(sp)
 478              		.cfi_restore 8
 479              		.cfi_def_cfa 2, 32
 480 02c4 83348100 		ld	s1,8(sp)
 481              		.cfi_restore 9
 482              	.LVL35:
 483 02c8 13010102 		addi	sp,sp,32
 484              		.cfi_def_cfa_offset 0
 485 02cc 67800000 		jr	ra
 486              	.LVL36:
 487              	.L34:
 488              		.cfi_restore_state
 102:src/memoryAllocator.cpp ****     if (newSeg->next) newSeg->next->prev = newSeg;
 489              		.loc 1 102 10 is_stmt 1
 102:src/memoryAllocator.cpp ****     if (newSeg->next) newSeg->next->prev = newSeg;
 490              		.loc 1 102 23 is_stmt 0
 491 02d0 97070000 		ld	a5,.LANCHOR0
 491      83B70700 
 492 02d8 2334F6FC 		sd	a5,-56(a2)
 493 02dc 6FF05FFB 		j	.L35
 494              	.L37:
 105:src/memoryAllocator.cpp **** 
 495              		.loc 1 105 10 is_stmt 1
 105:src/memoryAllocator.cpp **** 
 496              		.loc 1 105 26 is_stmt 0
 497 02e0 97070000 		sd	a0,.LANCHOR0,a5
 497      23B0A700 
 498 02e8 6FF0DFFB 		j	.L38
 499              	.LVL37:
 500              	.L39:
 501              		.cfi_def_cfa_register 2
 502              		.cfi_restore 1
 503              		.cfi_restore 8
 504              		.cfi_restore 9
  78:src/memoryAllocator.cpp **** 
 505              		.loc 1 78 23
 506 02ec 1305F0FF 		li	a0,-1
 507              	.LVL38:
 508 02f0 67800000 		ret
 509              	.LVL39:
 510              	.L40:
  84:src/memoryAllocator.cpp **** 
 511              		.loc 1 84 23
 512 02f4 1305F0FF 		li	a0,-1
GAS LISTING /tmp/cchBcBTk.s 			page 15


 513              	.LVL40:
 111:src/memoryAllocator.cpp **** 
 514              		.loc 1 111 1
 515 02f8 67800000 		ret
 516              		.cfi_endproc
 517              	.LFE2:
 519              		.globl	_ZN15MemoryAllocator11initializedE
 520              		.globl	_ZN15MemoryAllocator15usedSegmentHeadE
 521              		.globl	_ZN15MemoryAllocator15freeSegmentHeadE
 522              		.bss
 523              		.align	3
 524              		.set	.LANCHOR0,. + 0
 527              	_ZN15MemoryAllocator15freeSegmentHeadE:
 528 0000 00000000 		.zero	8
 528      00000000 
 531              	_ZN15MemoryAllocator15usedSegmentHeadE:
 532 0008 00000000 		.zero	8
 532      00000000 
 535              	_ZN15MemoryAllocator11initializedE:
 536 0010 00       		.zero	1
 537              		.text
 538              	.Letext0:
 539              		.file 2 "src/../h/../lib/hw.h"
 540              		.file 3 "src/../h/memoryAllocator.h"
GAS LISTING /tmp/cchBcBTk.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 memoryAllocator.cpp
     /tmp/cchBcBTk.s:9      .text:0000000000000000 _ZN15MemoryAllocator8mem_initEv
     /tmp/cchBcBTk.s:13     .text:0000000000000000 .L0 
     /tmp/cchBcBTk.s:14     .text:0000000000000000 .L0 
     /tmp/cchBcBTk.s:15     .text:0000000000000004 .L0 
     /tmp/cchBcBTk.s:17     .text:0000000000000008 .L0 
     /tmp/cchBcBTk.s:19     .text:000000000000000c .L0 
     /tmp/cchBcBTk.s:21     .text:000000000000000c .L0 
     /tmp/cchBcBTk.s:22     .text:000000000000000c .L0 
     /tmp/cchBcBTk.s:27     .text:0000000000000024 .L0 
     /tmp/cchBcBTk.s:28     .text:0000000000000024 .L0 
     /tmp/cchBcBTk.s:32     .text:0000000000000034 .L0 
     /tmp/cchBcBTk.s:34     .text:0000000000000038 .L0 
     /tmp/cchBcBTk.s:36     .text:000000000000003c .L0 
     /tmp/cchBcBTk.s:38     .text:0000000000000040 .L0 
     /tmp/cchBcBTk.s:40     .text:0000000000000044 .L0 
     /tmp/cchBcBTk.s:41     .text:0000000000000044 .L0 
     /tmp/cchBcBTk.s:43     .text:0000000000000048 .L0 
     /tmp/cchBcBTk.s:45     .text:000000000000004c .L0 
     /tmp/cchBcBTk.s:46     .text:000000000000004c .L0 
     /tmp/cchBcBTk.s:48     .text:0000000000000050 .L0 
     /tmp/cchBcBTk.s:49     .text:0000000000000050 .L0 
     /tmp/cchBcBTk.s:51     .text:0000000000000054 .L0 
     /tmp/cchBcBTk.s:52     .text:0000000000000058 .L0 
     /tmp/cchBcBTk.s:53     .text:0000000000000058 .L0 
     /tmp/cchBcBTk.s:55     .text:000000000000005c .L0 
     /tmp/cchBcBTk.s:57     .text:0000000000000060 .L0 
     /tmp/cchBcBTk.s:63     .text:0000000000000060 _ZN15MemoryAllocator9mem_allocEm
     /tmp/cchBcBTk.s:66     .text:0000000000000060 .L0 
     /tmp/cchBcBTk.s:68     .text:0000000000000060 .L0 
     /tmp/cchBcBTk.s:69     .text:0000000000000060 .L0 
     /tmp/cchBcBTk.s:71     .text:0000000000000064 .L0 
     /tmp/cchBcBTk.s:72     .text:0000000000000068 .L0 
     /tmp/cchBcBTk.s:76     .text:0000000000000074 .L0 
     /tmp/cchBcBTk.s:77     .text:0000000000000074 .L0 
     /tmp/cchBcBTk.s:78     .text:0000000000000074 .L0 
     /tmp/cchBcBTk.s:80     .text:0000000000000078 .L0 
     /tmp/cchBcBTk.s:82     .text:0000000000000078 .L0 
     /tmp/cchBcBTk.s:83     .text:0000000000000078 .L0 
     /tmp/cchBcBTk.s:86     .text:000000000000007c .L0 
     /tmp/cchBcBTk.s:87     .text:000000000000007c .L0 
     /tmp/cchBcBTk.s:89     .text:0000000000000084 .L0 
     /tmp/cchBcBTk.s:92     .text:0000000000000088 .L0 
     /tmp/cchBcBTk.s:93     .text:0000000000000088 .L0 
     /tmp/cchBcBTk.s:97     .text:0000000000000090 .L0 
     /tmp/cchBcBTk.s:98     .text:0000000000000090 .L0 
     /tmp/cchBcBTk.s:100    .text:0000000000000094 .L0 
     /tmp/cchBcBTk.s:102    .text:0000000000000098 .L0 
     /tmp/cchBcBTk.s:104    .text:000000000000009c .L0 
     /tmp/cchBcBTk.s:105    .text:000000000000009c .L0 
     /tmp/cchBcBTk.s:108    .text:00000000000000a0 .L0 
     /tmp/cchBcBTk.s:112    .text:00000000000000a4 .L0 
     /tmp/cchBcBTk.s:113    .text:00000000000000a4 .L0 
     /tmp/cchBcBTk.s:116    .text:00000000000000ac .L0 
     /tmp/cchBcBTk.s:117    .text:00000000000000ac .L0 
     /tmp/cchBcBTk.s:123    .text:00000000000000bc .L0 
GAS LISTING /tmp/cchBcBTk.s 			page 17


     /tmp/cchBcBTk.s:125    .text:00000000000000c0 .L0 
     /tmp/cchBcBTk.s:126    .text:00000000000000c0 .L0 
     /tmp/cchBcBTk.s:128    .text:00000000000000c4 .L0 
     /tmp/cchBcBTk.s:131    .text:00000000000000c8 .L0 
     /tmp/cchBcBTk.s:132    .text:00000000000000c8 .L0 
     /tmp/cchBcBTk.s:135    .text:00000000000000cc .L0 
     /tmp/cchBcBTk.s:138    .text:00000000000000d4 .L0 
     /tmp/cchBcBTk.s:139    .text:00000000000000d4 .L0 
     /tmp/cchBcBTk.s:144    .text:00000000000000dc .L0 
     /tmp/cchBcBTk.s:145    .text:00000000000000dc .L0 
     /tmp/cchBcBTk.s:147    .text:00000000000000e0 .L0 
     /tmp/cchBcBTk.s:148    .text:00000000000000e0 .L0 
     /tmp/cchBcBTk.s:151    .text:00000000000000e4 .L0 
     /tmp/cchBcBTk.s:152    .text:00000000000000e4 .L0 
     /tmp/cchBcBTk.s:154    .text:00000000000000e8 .L0 
     /tmp/cchBcBTk.s:155    .text:00000000000000e8 .L0 
     /tmp/cchBcBTk.s:157    .text:00000000000000f0 .L0 
     /tmp/cchBcBTk.s:159    .text:00000000000000f4 .L0 
     /tmp/cchBcBTk.s:160    .text:00000000000000f4 .L0 
     /tmp/cchBcBTk.s:162    .text:00000000000000f8 .L0 
     /tmp/cchBcBTk.s:163    .text:00000000000000f8 .L0 
     /tmp/cchBcBTk.s:166    .text:0000000000000100 .L0 
     /tmp/cchBcBTk.s:167    .text:0000000000000100 .L0 
     /tmp/cchBcBTk.s:171    .text:0000000000000104 .L0 
     /tmp/cchBcBTk.s:172    .text:0000000000000108 .L0 
     /tmp/cchBcBTk.s:173    .text:0000000000000108 .L0 
     /tmp/cchBcBTk.s:175    .text:000000000000010c .L0 
     /tmp/cchBcBTk.s:176    .text:000000000000010c .L0 
     /tmp/cchBcBTk.s:178    .text:0000000000000110 .L0 
     /tmp/cchBcBTk.s:181    .text:0000000000000114 .L0 
     /tmp/cchBcBTk.s:185    .text:0000000000000118 .L0 
     /tmp/cchBcBTk.s:189    .text:0000000000000118 .L0 
     /tmp/cchBcBTk.s:190    .text:0000000000000118 .L0 
     /tmp/cchBcBTk.s:193    .text:000000000000011c .L0 
     /tmp/cchBcBTk.s:194    .text:000000000000011c .L0 
     /tmp/cchBcBTk.s:197    .text:0000000000000120 .L0 
     /tmp/cchBcBTk.s:198    .text:0000000000000120 .L0 
     /tmp/cchBcBTk.s:200    .text:0000000000000124 .L0 
     /tmp/cchBcBTk.s:202    .text:0000000000000128 .L0 
     /tmp/cchBcBTk.s:203    .text:0000000000000128 .L0 
     /tmp/cchBcBTk.s:205    .text:000000000000012c .L0 
     /tmp/cchBcBTk.s:206    .text:000000000000012c .L0 
     /tmp/cchBcBTk.s:208    .text:0000000000000130 .L0 
     /tmp/cchBcBTk.s:211    .text:0000000000000134 .L0 
     /tmp/cchBcBTk.s:212    .text:0000000000000134 .L0 
     /tmp/cchBcBTk.s:214    .text:0000000000000138 .L0 
     /tmp/cchBcBTk.s:216    .text:000000000000013c .L0 
     /tmp/cchBcBTk.s:217    .text:000000000000013c .L0 
     /tmp/cchBcBTk.s:220    .text:0000000000000140 .L0 
     /tmp/cchBcBTk.s:221    .text:0000000000000140 .L0 
     /tmp/cchBcBTk.s:223    .text:0000000000000144 .L0 
     /tmp/cchBcBTk.s:225    .text:0000000000000148 .L0 
     /tmp/cchBcBTk.s:226    .text:0000000000000148 .L0 
     /tmp/cchBcBTk.s:229    .text:000000000000014c .L0 
     /tmp/cchBcBTk.s:234    .text:0000000000000154 .L0 
     /tmp/cchBcBTk.s:235    .text:0000000000000154 .L0 
     /tmp/cchBcBTk.s:237    .text:000000000000015c .L0 
GAS LISTING /tmp/cchBcBTk.s 			page 18


     /tmp/cchBcBTk.s:238    .text:000000000000015c .L0 
     /tmp/cchBcBTk.s:245    .text:0000000000000164 .L0 
     /tmp/cchBcBTk.s:246    .text:0000000000000164 .L0 
     /tmp/cchBcBTk.s:248    .text:000000000000016c .L0 
     /tmp/cchBcBTk.s:249    .text:000000000000016c .L0 
     /tmp/cchBcBTk.s:253    .text:0000000000000174 .L0 
     /tmp/cchBcBTk.s:254    .text:0000000000000174 .L0 
     /tmp/cchBcBTk.s:255    .text:0000000000000174 .L0 
     /tmp/cchBcBTk.s:256    .text:0000000000000174 .L0 
     /tmp/cchBcBTk.s:258    .text:0000000000000174 .L0 
     /tmp/cchBcBTk.s:261    .text:0000000000000178 .L0 
     /tmp/cchBcBTk.s:262    .text:000000000000017c .L0 
     /tmp/cchBcBTk.s:268    .text:000000000000017c _ZN15MemoryAllocator9tryToJoinEP11FreeSegment
     /tmp/cchBcBTk.s:271    .text:000000000000017c .L0 
     /tmp/cchBcBTk.s:273    .text:000000000000017c .L0 
     /tmp/cchBcBTk.s:274    .text:0000000000000180 .L0 
     /tmp/cchBcBTk.s:276    .text:0000000000000184 .L0 
     /tmp/cchBcBTk.s:278    .text:0000000000000188 .L0 
     /tmp/cchBcBTk.s:280    .text:0000000000000188 .L0 
     /tmp/cchBcBTk.s:282    .text:000000000000018c .L0 
     /tmp/cchBcBTk.s:283    .text:000000000000018c .L0 
     /tmp/cchBcBTk.s:285    .text:0000000000000190 .L0 
     /tmp/cchBcBTk.s:287    .text:0000000000000194 .L0 
     /tmp/cchBcBTk.s:289    .text:0000000000000198 .L0 
     /tmp/cchBcBTk.s:291    .text:000000000000019c .L0 
     /tmp/cchBcBTk.s:293    .text:00000000000001a0 .L0 
     /tmp/cchBcBTk.s:296    .text:00000000000001a4 .L0 
     /tmp/cchBcBTk.s:297    .text:00000000000001a8 .L0 
     /tmp/cchBcBTk.s:298    .text:00000000000001a8 .L0 
     /tmp/cchBcBTk.s:299    .text:00000000000001a8 .L0 
     /tmp/cchBcBTk.s:301    .text:00000000000001ac .L0 
     /tmp/cchBcBTk.s:304    .text:00000000000001b0 .L0 
     /tmp/cchBcBTk.s:306    .text:00000000000001b0 .L0 
     /tmp/cchBcBTk.s:307    .text:00000000000001b0 .L0 
     /tmp/cchBcBTk.s:309    .text:00000000000001b4 .L0 
     /tmp/cchBcBTk.s:313    .text:00000000000001c0 .L0 
     /tmp/cchBcBTk.s:314    .text:00000000000001c0 .L0 
     /tmp/cchBcBTk.s:316    .text:00000000000001c4 .L0 
     /tmp/cchBcBTk.s:318    .text:00000000000001c8 .L0 
     /tmp/cchBcBTk.s:320    .text:00000000000001cc .L0 
     /tmp/cchBcBTk.s:321    .text:00000000000001cc .L0 
     /tmp/cchBcBTk.s:323    .text:00000000000001d4 .L0 
     /tmp/cchBcBTk.s:329    .text:00000000000001d4 _ZN15MemoryAllocator8mem_freeEPv
     /tmp/cchBcBTk.s:332    .text:00000000000001d4 .L0 
     /tmp/cchBcBTk.s:334    .text:00000000000001d4 .L0 
     /tmp/cchBcBTk.s:335    .text:00000000000001d4 .L0 
     /tmp/cchBcBTk.s:338    .text:00000000000001dc .L0 
     /tmp/cchBcBTk.s:339    .text:00000000000001dc .L0 
     /tmp/cchBcBTk.s:342    .text:00000000000001e4 .L0 
     /tmp/cchBcBTk.s:346    .text:00000000000001e8 .L0 
     /tmp/cchBcBTk.s:347    .text:00000000000001e8 .L0 
     /tmp/cchBcBTk.s:348    .text:00000000000001e8 .L0 
     /tmp/cchBcBTk.s:350    .text:00000000000001ec .L0 
     /tmp/cchBcBTk.s:356    .text:0000000000000200 .L0 
     /tmp/cchBcBTk.s:359    .text:0000000000000204 .L0 
     /tmp/cchBcBTk.s:360    .text:0000000000000204 .L0 
     /tmp/cchBcBTk.s:362    .text:0000000000000208 .L0 
GAS LISTING /tmp/cchBcBTk.s 			page 19


     /tmp/cchBcBTk.s:365    .text:000000000000020c .L0 
     /tmp/cchBcBTk.s:368    .text:0000000000000210 .L0 
     /tmp/cchBcBTk.s:370    .text:0000000000000214 .L0 
     /tmp/cchBcBTk.s:371    .text:0000000000000218 .L0 
     /tmp/cchBcBTk.s:375    .text:0000000000000224 .L0 
     /tmp/cchBcBTk.s:376    .text:0000000000000224 .L0 
     /tmp/cchBcBTk.s:377    .text:0000000000000224 .L0 
     /tmp/cchBcBTk.s:379    .text:0000000000000228 .L0 
     /tmp/cchBcBTk.s:381    .text:0000000000000228 .L0 
     /tmp/cchBcBTk.s:383    .text:000000000000022c .L0 
     /tmp/cchBcBTk.s:384    .text:000000000000022c .L0 
     /tmp/cchBcBTk.s:386    .text:0000000000000230 .L0 
     /tmp/cchBcBTk.s:390    .text:0000000000000234 .L0 
     /tmp/cchBcBTk.s:391    .text:0000000000000234 .L0 
     /tmp/cchBcBTk.s:392    .text:0000000000000234 .L0 
     /tmp/cchBcBTk.s:394    .text:000000000000023c .L0 
     /tmp/cchBcBTk.s:396    .text:0000000000000240 .L0 
     /tmp/cchBcBTk.s:400    .text:0000000000000244 .L0 
     /tmp/cchBcBTk.s:402    .text:0000000000000248 .L0 
     /tmp/cchBcBTk.s:405    .text:000000000000024c .L0 
     /tmp/cchBcBTk.s:407    .text:0000000000000250 .L0 
     /tmp/cchBcBTk.s:412    .text:0000000000000258 .L0 
     /tmp/cchBcBTk.s:413    .text:0000000000000258 .L0 
     /tmp/cchBcBTk.s:415    .text:000000000000025c .L0 
     /tmp/cchBcBTk.s:420    .text:0000000000000268 .L0 
     /tmp/cchBcBTk.s:427    .text:0000000000000274 .L0 
     /tmp/cchBcBTk.s:428    .text:0000000000000274 .L0 
     /tmp/cchBcBTk.s:431    .text:0000000000000278 .L0 
     /tmp/cchBcBTk.s:432    .text:0000000000000278 .L0 
     /tmp/cchBcBTk.s:434    .text:000000000000027c .L0 
     /tmp/cchBcBTk.s:436    .text:0000000000000280 .L0 
     /tmp/cchBcBTk.s:437    .text:0000000000000280 .L0 
     /tmp/cchBcBTk.s:439    .text:0000000000000284 .L0 
     /tmp/cchBcBTk.s:441    .text:0000000000000288 .L0 
     /tmp/cchBcBTk.s:442    .text:0000000000000288 .L0 
     /tmp/cchBcBTk.s:444    .text:000000000000028c .L0 
     /tmp/cchBcBTk.s:447    .text:0000000000000290 .L0 
     /tmp/cchBcBTk.s:448    .text:0000000000000290 .L0 
     /tmp/cchBcBTk.s:450    .text:0000000000000294 .L0 
     /tmp/cchBcBTk.s:452    .text:0000000000000298 .L0 
     /tmp/cchBcBTk.s:453    .text:0000000000000298 .L0 
     /tmp/cchBcBTk.s:456    .text:000000000000029c .L0 
     /tmp/cchBcBTk.s:458    .text:00000000000002a0 .L0 
     /tmp/cchBcBTk.s:459    .text:00000000000002a0 .L0 
     /tmp/cchBcBTk.s:462    .text:00000000000002a4 .L0 
     /tmp/cchBcBTk.s:463    .text:00000000000002a4 .L0 
     /tmp/cchBcBTk.s:466    .text:00000000000002ac .L0 
     /tmp/cchBcBTk.s:467    .text:00000000000002ac .L0 
     /tmp/cchBcBTk.s:471    .text:00000000000002b8 .L0 
     /tmp/cchBcBTk.s:472    .text:00000000000002b8 .L0 
     /tmp/cchBcBTk.s:474    .text:00000000000002bc .L0 
     /tmp/cchBcBTk.s:475    .text:00000000000002c0 .L0 
     /tmp/cchBcBTk.s:476    .text:00000000000002c0 .L0 
     /tmp/cchBcBTk.s:478    .text:00000000000002c4 .L0 
     /tmp/cchBcBTk.s:479    .text:00000000000002c4 .L0 
     /tmp/cchBcBTk.s:481    .text:00000000000002c8 .L0 
     /tmp/cchBcBTk.s:484    .text:00000000000002cc .L0 
GAS LISTING /tmp/cchBcBTk.s 			page 20


     /tmp/cchBcBTk.s:488    .text:00000000000002d0 .L0 
     /tmp/cchBcBTk.s:490    .text:00000000000002d0 .L0 
     /tmp/cchBcBTk.s:491    .text:00000000000002d0 .L0 
     /tmp/cchBcBTk.s:496    .text:00000000000002e0 .L0 
     /tmp/cchBcBTk.s:497    .text:00000000000002e0 .L0 
     /tmp/cchBcBTk.s:501    .text:00000000000002ec .L0 
     /tmp/cchBcBTk.s:502    .text:00000000000002ec .L0 
     /tmp/cchBcBTk.s:503    .text:00000000000002ec .L0 
     /tmp/cchBcBTk.s:504    .text:00000000000002ec .L0 
     /tmp/cchBcBTk.s:506    .text:00000000000002ec .L0 
     /tmp/cchBcBTk.s:512    .text:00000000000002f4 .L0 
     /tmp/cchBcBTk.s:515    .text:00000000000002f8 .L0 
     /tmp/cchBcBTk.s:516    .text:00000000000002fc .L0 
     /tmp/cchBcBTk.s:535    .bss:0000000000000010 _ZN15MemoryAllocator11initializedE
     /tmp/cchBcBTk.s:531    .bss:0000000000000008 _ZN15MemoryAllocator15usedSegmentHeadE
     /tmp/cchBcBTk.s:527    .bss:0000000000000000 _ZN15MemoryAllocator15freeSegmentHeadE
     /tmp/cchBcBTk.s:524    .bss:0000000000000000 .LANCHOR0
     /tmp/cchBcBTk.s:541    .text:00000000000002fc .L0 
     /tmp/cchBcBTk.s:22     .text:000000000000000c .L0 
     /tmp/cchBcBTk.s:24     .text:0000000000000018 .L0 
     /tmp/cchBcBTk.s:28     .text:0000000000000024 .L0 
     /tmp/cchBcBTk.s:87     .text:000000000000007c .L0 
     /tmp/cchBcBTk.s:93     .text:0000000000000088 .L0 
     /tmp/cchBcBTk.s:118    .text:00000000000000b0 .L0 
     /tmp/cchBcBTk.s:139    .text:00000000000000d4 .L0 
     /tmp/cchBcBTk.s:155    .text:00000000000000e8 .L0 
     /tmp/cchBcBTk.s:163    .text:00000000000000f8 .L0 
     /tmp/cchBcBTk.s:235    .text:0000000000000154 .L0 
     /tmp/cchBcBTk.s:246    .text:0000000000000164 .L0 
     /tmp/cchBcBTk.s:339    .text:00000000000001dc .L0 
     /tmp/cchBcBTk.s:392    .text:0000000000000234 .L0 
     /tmp/cchBcBTk.s:415    .text:000000000000025c .L0 
     /tmp/cchBcBTk.s:491    .text:00000000000002d0 .L0 
     /tmp/cchBcBTk.s:497    .text:00000000000002e0 .L0 
     /tmp/cchBcBTk.s:252    .text:0000000000000174 .L15
     /tmp/cchBcBTk.s:110    .text:00000000000000a4 .L20
     /tmp/cchBcBTk.s:121    .text:00000000000000bc .L6
     /tmp/cchBcBTk.s:95     .text:0000000000000090 .L7
     /tmp/cchBcBTk.s:90     .text:0000000000000088 .L5
     /tmp/cchBcBTk.s:169    .text:0000000000000104 .L3
     /tmp/cchBcBTk.s:184    .text:0000000000000118 .L8
     /tmp/cchBcBTk.s:241    .text:0000000000000164 .L21
     /tmp/cchBcBTk.s:232    .text:0000000000000154 .L10
     /tmp/cchBcBTk.s:218    .text:0000000000000140 .L12
     /tmp/cchBcBTk.s:141    .text:00000000000000dc .L9
     /tmp/cchBcBTk.s:209    .text:0000000000000134 .L11
     /tmp/cchBcBTk.s:164    .text:0000000000000100 .L14
     /tmp/cchBcBTk.s:294    .text:00000000000001a4 .L22
     /tmp/cchBcBTk.s:303    .text:00000000000001b0 .L25
     /tmp/cchBcBTk.s:500    .text:00000000000002ec .L39
     /tmp/cchBcBTk.s:366    .text:0000000000000210 .L28
     /tmp/cchBcBTk.s:344    .text:00000000000001e8 .L29
     /tmp/cchBcBTk.s:510    .text:00000000000002f4 .L40
     /tmp/cchBcBTk.s:410    .text:0000000000000258 .L30
     /tmp/cchBcBTk.s:418    .text:0000000000000268 .L41
     /tmp/cchBcBTk.s:422    .text:0000000000000270 .L42
     /tmp/cchBcBTk.s:425    .text:0000000000000274 .L32
GAS LISTING /tmp/cchBcBTk.s 			page 21


     /tmp/cchBcBTk.s:398    .text:0000000000000244 .L33
     /tmp/cchBcBTk.s:387    .text:0000000000000234 .L31
     /tmp/cchBcBTk.s:487    .text:00000000000002d0 .L34
     /tmp/cchBcBTk.s:454    .text:000000000000029c .L36
     /tmp/cchBcBTk.s:494    .text:00000000000002e0 .L37
     /tmp/cchBcBTk.s:445    .text:0000000000000290 .L35
     /tmp/cchBcBTk.s:460    .text:00000000000002a4 .L38
     /tmp/cchBcBTk.s:972    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cchBcBTk.s:1731   .debug_str:0000000000000089 .LASF37
     /tmp/cchBcBTk.s:1763   .debug_str:0000000000000204 .LASF38
     /tmp/cchBcBTk.s:1775   .debug_str:0000000000000289 .LASF39
     /tmp/cchBcBTk.s:5      .text:0000000000000000 .Ltext0
     /tmp/cchBcBTk.s:538    .text:00000000000002fc .Letext0
     /tmp/cchBcBTk.s:1709   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cchBcBTk.s:1767   .debug_str:000000000000024a .LASF0
     /tmp/cchBcBTk.s:1755   .debug_str:00000000000001da .LASF1
     /tmp/cchBcBTk.s:1747   .debug_str:00000000000001a2 .LASF2
     /tmp/cchBcBTk.s:1727   .debug_str:0000000000000062 .LASF4
     /tmp/cchBcBTk.s:1751   .debug_str:00000000000001bc .LASF3
     /tmp/cchBcBTk.s:1715   .debug_str:0000000000000023 .LASF5
     /tmp/cchBcBTk.s:1711   .debug_str:0000000000000000 .LASF6
     /tmp/cchBcBTk.s:1739   .debug_str:000000000000014f .LASF7
     /tmp/cchBcBTk.s:1719   .debug_str:000000000000002f .LASF8
     /tmp/cchBcBTk.s:1723   .debug_str:0000000000000044 .LASF9
     /tmp/cchBcBTk.s:1807   .debug_str:0000000000000395 .LASF10
     /tmp/cchBcBTk.s:1741   .debug_str:0000000000000162 .LASF11
     /tmp/cchBcBTk.s:1799   .debug_str:0000000000000371 .LASF12
     /tmp/cchBcBTk.s:1781   .debug_str:00000000000002e0 .LASF13
     /tmp/cchBcBTk.s:1759   .debug_str:00000000000001f3 .LASF14
     /tmp/cchBcBTk.s:1735   .debug_str:0000000000000134 .LASF15
     /tmp/cchBcBTk.s:1779   .debug_str:00000000000002ca .LASF16
     /tmp/cchBcBTk.s:1753   .debug_str:00000000000001ce .LASF20
     /tmp/cchBcBTk.s:1803   .debug_str:000000000000038b .LASF17
     /tmp/cchBcBTk.s:1717   .debug_str:000000000000002a .LASF18
     /tmp/cchBcBTk.s:1805   .debug_str:0000000000000390 .LASF19
     /tmp/cchBcBTk.s:1795   .debug_str:000000000000035b .LASF21
     /tmp/cchBcBTk.s:1713   .debug_str:0000000000000013 .LASF40
     /tmp/cchBcBTk.s:1725   .debug_str:0000000000000052 .LASF22
     /tmp/cchBcBTk.s:1743   .debug_str:0000000000000171 .LASF23
     /tmp/cchBcBTk.s:1733   .debug_str:000000000000012b .LASF41
     /tmp/cchBcBTk.s:1729   .debug_str:0000000000000069 .LASF42
     /tmp/cchBcBTk.s:1797   .debug_str:0000000000000367 .LASF43
     /tmp/cchBcBTk.s:1765   .debug_str:000000000000021c .LASF44
     /tmp/cchBcBTk.s:1749   .debug_str:00000000000001b0 .LASF24
     /tmp/cchBcBTk.s:1801   .debug_str:0000000000000381 .LASF45
     /tmp/cchBcBTk.s:1793   .debug_str:000000000000033a .LASF46
     /tmp/cchBcBTk.s:1783   .debug_str:00000000000002f0 .LASF47
     /tmp/cchBcBTk.s:1745   .debug_str:0000000000000181 .LASF48
     /tmp/cchBcBTk.s:1787   .debug_str:0000000000000307 .LASF25
     /tmp/cchBcBTk.s:1791   .debug_str:0000000000000313 .LASF26
     /tmp/cchBcBTk.s:1777   .debug_str:00000000000002a3 .LASF27
     /tmp/cchBcBTk.s:1773   .debug_str:0000000000000266 .LASF28
     /tmp/cchBcBTk.s:269    .text:000000000000017c .LFB3
     /tmp/cchBcBTk.s:324    .text:00000000000001d4 .LFE3
     /tmp/cchBcBTk.s:1761   .debug_str:00000000000001ff .LASF29
     /tmp/cchBcBTk.s:330    .text:00000000000001d4 .LFB2
     /tmp/cchBcBTk.s:517    .text:00000000000002fc .LFE2
GAS LISTING /tmp/cchBcBTk.s 			page 22


     /tmp/cchBcBTk.s:1737   .debug_str:000000000000014a .LASF30
     /tmp/cchBcBTk.s:1451   .debug_loc:0000000000000000 .LLST6
     /tmp/cchBcBTk.s:1492   .debug_loc:00000000000000ae .LLST7
     /tmp/cchBcBTk.s:1516   .debug_loc:000000000000011e .LLST8
     /tmp/cchBcBTk.s:1757   .debug_str:00000000000001ed .LASF31
     /tmp/cchBcBTk.s:1544   .debug_loc:00000000000001a1 .LLST9
     /tmp/cchBcBTk.s:1771   .debug_str:000000000000025f .LASF32
     /tmp/cchBcBTk.s:1573   .debug_loc:0000000000000225 .LLST10
     /tmp/cchBcBTk.s:464    .text:00000000000002ac .LVL33
     /tmp/cchBcBTk.s:469    .text:00000000000002b8 .LVL34
     /tmp/cchBcBTk.s:10     .text:0000000000000000 .LFB1
     /tmp/cchBcBTk.s:58     .text:0000000000000060 .LFE1
     /tmp/cchBcBTk.s:64     .text:0000000000000060 .LFB0
     /tmp/cchBcBTk.s:263    .text:000000000000017c .LFE0
     /tmp/cchBcBTk.s:1594   .debug_loc:0000000000000274 .LLST0
     /tmp/cchBcBTk.s:1629   .debug_loc:00000000000002fe .LLST1
     /tmp/cchBcBTk.s:1785   .debug_str:00000000000002f9 .LASF33
     /tmp/cchBcBTk.s:1644   .debug_loc:0000000000000347 .LLST2
     /tmp/cchBcBTk.s:1721   .debug_str:000000000000003f .LASF34
     /tmp/cchBcBTk.s:1665   .debug_loc:00000000000003a6 .LLST3
     /tmp/cchBcBTk.s:187    .text:0000000000000118 .LBB3
     /tmp/cchBcBTk.s:242    .text:0000000000000164 .LBE3
     /tmp/cchBcBTk.s:1789   .debug_str:000000000000030c .LASF35
     /tmp/cchBcBTk.s:1676   .debug_loc:00000000000003dc .LLST4
     /tmp/cchBcBTk.s:1769   .debug_str:0000000000000257 .LASF36
     /tmp/cchBcBTk.s:1689   .debug_loc:0000000000000415 .LLST5
     /tmp/cchBcBTk.s:114    .text:00000000000000ac .LVL5
     /tmp/cchBcBTk.s:333    .text:00000000000001d4 .LVL21
     /tmp/cchBcBTk.s:429    .text:0000000000000278 .LVL32
     /tmp/cchBcBTk.s:486    .text:00000000000002d0 .LVL36
     /tmp/cchBcBTk.s:499    .text:00000000000002ec .LVL37
     /tmp/cchBcBTk.s:507    .text:00000000000002f0 .LVL38
     /tmp/cchBcBTk.s:509    .text:00000000000002f4 .LVL39
     /tmp/cchBcBTk.s:513    .text:00000000000002f8 .LVL40
     /tmp/cchBcBTk.s:340    .text:00000000000001e4 .LVL22
     /tmp/cchBcBTk.s:358    .text:0000000000000204 .LVL24
     /tmp/cchBcBTk.s:363    .text:000000000000020c .LVL25
     /tmp/cchBcBTk.s:343    .text:00000000000001e8 .LVL23
     /tmp/cchBcBTk.s:389    .text:0000000000000234 .LVL26
     /tmp/cchBcBTk.s:397    .text:0000000000000244 .LVL27
     /tmp/cchBcBTk.s:403    .text:000000000000024c .LVL28
     /tmp/cchBcBTk.s:409    .text:0000000000000258 .LVL29
     /tmp/cchBcBTk.s:417    .text:0000000000000268 .LVL30
     /tmp/cchBcBTk.s:424    .text:0000000000000274 .LVL31
     /tmp/cchBcBTk.s:482    .text:00000000000002c8 .LVL35
     /tmp/cchBcBTk.s:67     .text:0000000000000060 .LVL0
     /tmp/cchBcBTk.s:84     .text:000000000000007c .LVL1
     /tmp/cchBcBTk.s:179    .text:0000000000000110 .LVL11
     /tmp/cchBcBTk.s:183    .text:0000000000000118 .LVL12
     /tmp/cchBcBTk.s:251    .text:0000000000000174 .LVL18
     /tmp/cchBcBTk.s:259    .text:0000000000000178 .LVL19
     /tmp/cchBcBTk.s:94     .text:0000000000000090 .LVL2
     /tmp/cchBcBTk.s:109    .text:00000000000000a4 .LVL4
     /tmp/cchBcBTk.s:120    .text:00000000000000bc .LVL6
     /tmp/cchBcBTk.s:168    .text:0000000000000104 .LVL10
     /tmp/cchBcBTk.s:129    .text:00000000000000c8 .LVL7
     /tmp/cchBcBTk.s:140    .text:00000000000000dc .LVL8
GAS LISTING /tmp/cchBcBTk.s 			page 23


     /tmp/cchBcBTk.s:227    .text:000000000000014c .LVL15
     /tmp/cchBcBTk.s:231    .text:0000000000000154 .LVL16
     /tmp/cchBcBTk.s:240    .text:0000000000000164 .LVL17
     /tmp/cchBcBTk.s:149    .text:00000000000000e4 .LVL9
     /tmp/cchBcBTk.s:191    .text:000000000000011c .LVL13
     /tmp/cchBcBTk.s:195    .text:0000000000000120 .LVL14
     /tmp/cchBcBTk.s:542    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
